// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorTraining.Client.Pages.Plans
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using BlazorTraining.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using BlazorTraining.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using BlazorTraining.Server.Business.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using BlazorTraining.Server.Entities.Dtos;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using BlazorTraining.Server.Entities.Concrete;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using BlazorTraining.Server.Entities.Concrete.Dto;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using BlazorTraining.Server.Core.Auth;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using Blazor.FileReader;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\Pages\Plans\EditPlan.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/plans/details/{id}")]
    public partial class EditPlan : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 68 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\Pages\Plans\EditPlan.razor"
       

    [CascadingParameter]
    private Task<AuthenticationState> authState { get; set; }

    [Parameter]
    public string Id { get; set; }

    PlanRequest model = new PlanRequest();
    Stream fileStream = null;

    List<ToDoItem> toDo = new List<ToDoItem>();
    ToDoItemRequest toDoModel = new ToDoItemRequest();
    ToDoItem selectedItem = null;

    string imageContent = string.Empty;
    string fileName = string.Empty;

    bool IsBusy = false;
    string message = string.Empty;
    Models.AlertMessageType messageType = Models.AlertMessageType.Success;

    ElementReference inputReference;

    async Task ChooseFileAsync()
    {
        var file = (await fileReadService.CreateReference(inputReference).EnumerateFilesAsync()).FirstOrDefault();
        var fileInfo = await file.ReadFileInfoAsync();
        string extension = Path.GetExtension(fileInfo.Name);
        var allowExtensions = new string[] { ".jpg", ".png", ".jpeg", ".gif", ".bmp" };

        

#line default
#line hidden
#nullable disable
#nullable restore
#line 99 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\Pages\Plans\EditPlan.razor"
         if (!allowExtensions.Contains(extension))
        {
            message = "Choosen image is not a valid image";
            messageType = Models.AlertMessageType.Error;
            return;
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 104 "C:\Users\kurtulusocL\Desktop\BlazorTraining\BlazorTraining.Client\Pages\Plans\EditPlan.razor"
         
        message = null;

        using (var memoryStream = await file.CreateMemoryStreamAsync())
        {
            fileStream = new MemoryStream(memoryStream.ToArray());
            imageContent = $"data:{fileInfo.Type};base64,{Convert.ToBase64String(memoryStream.ToArray())}";
        }
    }

    async Task EditPlanAsync()
    {
        IsBusy = true;

        model.CoverFile = fileStream;
        model.FileName = fileName;
        var result = await planService.CreatePlanAsync(model);
        if (result.IsSuccess)
        {
            message = "Your plan added successfully";
            messageType = Models.AlertMessageType.Success;
        }
        else
        {
            message = result.Message;
            messageType = Models.AlertMessageType.Error;
        }

        IsBusy = false;
    }

    async Task GetPlanById()
    {
        IsBusy = true;
        var result = await planService.GetPlanByIdAsync(Id);
        if (result.IsSuccess)
        {
            model.Title = result.Record.Title;
            model.Description = result.Record.Description;
            imageContent = result.Record.CoverPath;
            model.Id = Id;
            toDo = result.Record.ToDoItems.ToList();
        }
        else
        {
            message = result.Message;
            messageType = Models.AlertMessageType.Error;
        }

        IsBusy = false;
    }

    protected async override Task OnInitializedAsync()
    {
        var userState = authState.Result;
        string accessToken = userState.User.FindFirst("AccessToken").Value;

        planService.AccessToken = accessToken;
        toDoItemService.AccessToken = accessToken;

        await GetPlanById();
    }

    async Task CreateToDoAsync()
    {
        IsBusy = true;
        toDoModel.PlanId = Id;
        var result = await toDoItemService.CreateAsync(toDoModel);
        if (result.IsSuccess)
        {
            toDo.Add(result.Record);
        }
        else
        {
            message = "Mistake";
            messageType = Models.AlertMessageType.Error;
        }
        IsBusy = false;
    }

    async Task SubmitItemFormAsync()
    {
        if (selectedItem == null)
        {
            await CreateToDoAsync();
        }
        else
        {
            await EditToDoAsync();
        }
    }

    async Task ChangeToDoStatusAsync(string id)
    {
        IsBusy = true;
        var result = await toDoItemService.ChangeItemStateAsync(id);
        if (!result.IsSuccess)
        {
            message = "Mistake";
            messageType = Models.AlertMessageType.Error;
        }
        IsBusy = false;
    }

    void SelectItem(ToDoItem item)
    {
        selectedItem = item;
        toDoModel.Id = item.Id;
        toDoModel.Description = item.Description;
    }

    async Task EditToDoAsync()
    {
        IsBusy = true;
        toDoModel.PlanId = Id;
        var result = await toDoItemService.EditAsync(toDoModel);
        if (result.IsSuccess)
        {
            var editToDo = toDo.SingleOrDefault(i => i.Id == result.Record.Id);
            editToDo.Description = result.Record.Description;
        }
        else
        {
            message = "Mistake";
            messageType = Models.AlertMessageType.Error;
        }
        IsBusy = false;
    }

    void ClearSelection()
    {
        selectedItem = null;
        toDoModel.Id = null;
        toDoModel.Description = null;
    }

    async Task DeleteTask(ToDoItem item)
    {
        IsBusy = true;
        var result = await toDoItemService.DeleteAsync(item.Id);
        if (result.IsSuccess)
        {
            toDo.Remove(item);
        }
        else
        {
            message = "Mistake";
            messageType = Models.AlertMessageType.Error;
        }

        IsBusy = false;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileReaderService fileReadService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ToDoItemService toDoItemService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private PlanService planService { get; set; }
    }
}
#pragma warning restore 1591
